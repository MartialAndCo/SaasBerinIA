"""initial migration

Revision ID: 352cb78921d3
Revises: 
Create Date: 2025-04-23 14:22:40.484348

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '352cb78921d3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass  # Table does not exist
    pass  # Table does not exist
    pass  # Table does not exist
    pass  # Table does not exist
    pass  # Table does not exist
    pass  # Table does not exist
    pass  # Table does not exist
    op.alter_column('campaigns', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_campaigns_id'), 'campaigns', ['id'], unique=False)
    op.create_index(op.f('ix_campaigns_nom'), 'campaigns', ['nom'], unique=False)
    op.drop_constraint('campaigns_niche_id_fkey', 'campaigns', type_='foreignkey')
    op.create_foreign_key(None, 'campaigns', 'niches', ['niche_id'], ['id'])
    op.create_index(op.f('ix_leads_email'), 'leads', ['email'], unique=True)
    op.create_index(op.f('ix_leads_id'), 'leads', ['id'], unique=False)
    op.create_index(op.f('ix_leads_nom'), 'leads', ['nom'], unique=False)
    op.create_index(op.f('ix_leads_telephone'), 'leads', ['telephone'], unique=True)
    op.drop_constraint('leads_campagne_id_fkey', 'leads', type_='foreignkey')
    op.create_foreign_key(None, 'leads', 'campaigns', ['campagne_id'], ['id'])
    op.alter_column('niches', 'date_creation',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_niches_id'), 'niches', ['id'], unique=False)
    op.create_index(op.f('ix_niches_nom'), 'niches', ['nom'], unique=False)
    op.add_column('users', sa.Column('username', sa.String(), nullable=True))
    op.add_column('users', sa.Column('full_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_column('users', 'is_superuser')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_superuser', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'hashed_password',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'full_name')
    op.drop_column('users', 'username')
    op.drop_index(op.f('ix_niches_nom'), table_name='niches')
    op.drop_index(op.f('ix_niches_id'), table_name='niches')
    op.alter_column('niches', 'date_creation',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint(None, 'leads', type_='foreignkey')
    op.create_foreign_key('leads_campagne_id_fkey', 'leads', 'campaigns', ['campagne_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_leads_telephone'), table_name='leads')
    op.drop_index(op.f('ix_leads_nom'), table_name='leads')
    op.drop_index(op.f('ix_leads_id'), table_name='leads')
    op.drop_index(op.f('ix_leads_email'), table_name='leads')
    op.drop_constraint(None, 'campaigns', type_='foreignkey')
    op.create_foreign_key('campaigns_niche_id_fkey', 'campaigns', 'niches', ['niche_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_campaigns_nom'), table_name='campaigns')
    op.drop_index(op.f('ix_campaigns_id'), table_name='campaigns')
    op.alter_column('campaigns', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.create_table('test_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='test_table_pkey')
    )
    op.create_table('campaigns_stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_point', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('campaigns_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='campaigns_stats_pkey')
    )
    op.create_table('conversion_stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_point', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('valeur', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='conversion_stats_pkey')
    )
    op.create_table('logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('level', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='logs_pkey')
    )
    op.create_table('leads_stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_point', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('leads_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='leads_stats_pkey')
    )
    op.create_table('stats_overview',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('total_leads', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_campaigns', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conversion_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('generated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='stats_overview_pkey')
    )
    op.create_table('dashboard_metrics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('campaigns_active', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('leads_collected', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('success_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='dashboard_metrics_pkey')
    )
    # ### end Alembic commands ###
